class: Workflow
cwlVersion: v1.0
id: icgc-pcawg-dkfz-embl-variant-calling-workflow
doc: >-
  The DKFZ/EMBL workflow from the ICGC PanCancer Analysis of Whole Genomes
  (PCAWG) project.  

  ![pcawg
  logo](https://raw.githubusercontent.com/ICGC-TCGA-PanCancer/pcawg_delly_workflow/2.0.0/img/PCAWG-final-small.png
  "pcawg logo")


  This workflow is a combination of the **ICGC PCAWG Seqware Delly Workflow**
  (EMBL workflow) for structural variation and the **ICGC PCAWG DKFZ Workflow**
  workflow for SNVs, indels, and copy number variants.


  For more information see the PCAWG project [page](https://dcc.icgc.org/pcawg)
  and the GitHub [page](https://github.com/ICGC-TCGA-PanCancer) for the code.  


  *A list of **all inputs and parameters** with corresponding descriptions can
  be found at the bottom of the page.*


  ### Common Use Cases

  This tool is used to call variants from Tumor/Normal pair of BAM files,
  previously generated by using the **ICGC-PCAWG-Seqware-BWA-Workflow** tool
  available in **Public Apps**, in the same manner as the VCF files in the ICGC
  PCAWG dataset. To do this, set:

  - Tumor/Normal pair in BAM format, provided via **Input BAM Files** port.

  - Reference file **dkfz-workflow-dependencies_150318_0951.tar.gz** via **DKFZ
  Reference Bundle** port. This file is available in **Public Reference Files**.

  - Reference file **pcawg.icgc.genome.fa.gz** via **Reference GZ** port. This
  file is available in **Public Reference Files**.

  - Reference file **hs37d5_1000GP.gc** via **Reference GC** port. This file is
  available in **Public Reference Files**.

  - For running you need to copy the reference files to your project.


  ### Common Issues and Important Notes

  - Please use the reference files **pcawg.icgc.genome.fa.gz**,
  **dkfz-workflow-dependencies_150318_0951.tar.gz** and  **hs37d5_1000GP.gc**,
  available in **Public Reference Files**.

  - Make sure that the reads are aligned to the **pcawg.icgc.genome.fa.gz**
  reference, using the public app **ICGC-PCAWG-Seqware-BWA-Workflow**.

  - Metadata fields **Sample Type** and **Case ID** are required for execution.

  - Metadata field **Case ID** must be the same in both Tumor and Normal BAM
  files.

  - **Sample type** metadata field for Normal sample BAM **must** contain the
  word **"Normal"** and the same field in Tumor sample BAM metadata must not
  contain the word **"Normal"**.


  ### Performance Benchmarking


  The workflow consists of two stages - Delly for SV calling and DKFZ for SNV,
  INDEL and CNV calling. Previous testing has shown that the optimal
  computational instance for the first stage is **c4.2xlarge**, while for the
  second stage it is **c4.8xlarge**. Therefore, the two stages are executed on
  different instance types. The following table shows examples of run time and
  cost.  

  *Cost can be reduced with **spot instance** usage. Visit [knowledge
  center](https://docs.sevenbridges.com/docs/about-spot-instances) for more
  details.*  

  | Input BAM sizes (Tumor+Normal) | Cost  | Duration | Instance Type (AWS) |

  |------------------|-------|----------|------------|

  | 120+40GB         | 26.4$ | 37h 53m    | c4.2xlarge, c4.8xlarge |


  ### API Python Implementation

  A draft task can also be submitted via the **API**. In order to learn how to
  get your **Authentication token** and **API endpoint** for corresponding
  platform visit our
  [documentation](https://github.com/sbg/sevenbridges-python#authentication-and-configuration).


  ```python

  from sevenbridges import Api


  authentication_token, api_endpoint = "enter_your_token", "enter_api_endpoint"

  api = Api(token=authentication_token, url=api_endpoint)

  # Get project_id/workflow_id from your address bar. Example:
  https://cgc.sbgenomics.com/u/your_username/project/workflow

  project_id, workflow_id = "your_username/project",
  "your_username/project/workflow"

  # Get file names from files in your project.

  inputs = {
      'reference-dkfz': api.files.query(project=project_id, names=['dkfz-workflow-dependencies_150318_0951.tar.gz'])[0],
      'reference-gc': api.files.query(project=project_id, names=['hs37d5_1000GP.gc'])[0],
      'reference-gz': api.files.query(project=project_id, names=['pcawg.icgc.genome.fa.gz'])[0],
      'bam_inputs': list(api.files.query(project=project_id, names=['Tumor.bam', 'Normal.bam']))
      }
  task = api.tasks.create(name='PCAWG DKFZ-EMBL Workflow - API Example',
  project=project_id, app=workflow_id, inputs=inputs, run=False, 
                          batch_input='bam_inputs', batch_by = { 'type': 'CRITERIA', 'criteria': [ 'metadata.case_id'] })
  ```

  Instructions for installing and configuring the API Python client, are
  provided on [github](https://github.com/sbg/sevenbridges-python#installation).
  For more information about using the API Python client, consult
  [sevenbridges-python
  documentation](http://sevenbridges-python.readthedocs.io/en/latest/). **More
  examples** are available [here](https://github.com/sbg/okAPI).


  Additionally, [API R](https://github.com/sbg/sevenbridges-r) and [API
  Java](https://github.com/sbg/sevenbridges-java) clients are available. To
  learn more about using these API clients please refer to the [API R client
  documentation](https://sbg.github.io/sevenbridges-r/), and [API Java client
  documentation](https://docs.sevenbridges.com/docs/java-library-quickstart).
label: ICGC PCAWG DKFZ/EMBL Variant Calling Workflow
$namespaces:
  sbg: 'https://sevenbridges.com'
inputs:
  - id: bam_inputs
    'sbg:fileTypes': BAM
    type: 'File[]'
    label: Input BAM Files
    doc: Tumor Normal pair.
    'sbg:x': 0
    'sbg:y': 584
  - id: reference-gz
    'sbg:fileTypes': FA.GZ
    type: File
    label: Reference GZ
    doc: Reference file.
    'sbg:suggestedValue':
      class: File
      name: pcawg.icgc.genome.fa.gz
      path: 5a46312d4f0c6114563e91de
    'sbg:x': 0
    'sbg:y': 370.0000305175781
  - id: reference-gc
    'sbg:fileTypes': GC
    type: File
    label: Reference GC
    doc: Reference GC file.
    'sbg:suggestedValue':
      class: File
      name: hs37d5_1000GP.gc
      path: 5a71af344f0cfede55aef764
    'sbg:x': 0
    'sbg:y': 477.0000305175781
  - id: reference-dkfz
    'sbg:fileTypes': TAR.GZ
    type: File
    label: Reference DKFZ Bundle
    doc: Reference DKFZ Bundle
    'sbg:suggestedValue':
      class: File
      name: dkfz-workflow-dependencies_150318_0951.tar.gz
      path: 5a71b2914f0cfede55aeff96
    'sbg:x': 155.296875
    'sbg:y': 321.00006103515625
  - id: run_id
    type: string?
    label: Run ID
    doc: >-
      Run ID that is added as a part of the output file names. If Run ID is not
      set, the outputs will be named in line with Case_ID metadata field.
    'sbg:x': 0
    'sbg:y': 263.0000305175781
outputs:
  - id: cov
    outputSource:
      - pcawg_icgc_delly_workflow_1/cov
    'sbg:fileTypes': TAR.GZ
    type: File
    'sbg:x': 513.3573608398438
    'sbg:y': 847
  - id: cov_plots
    outputSource:
      - pcawg_icgc_delly_workflow_1/cov_plots
    'sbg:fileTypes': TAR.GZ
    type: File
    'sbg:x': 513.3573608398438
    'sbg:y': 740
  - id: germline_bedpe
    outputSource:
      - pcawg_icgc_delly_workflow_1/germline_bedpe
    'sbg:fileTypes': TXT
    type: File
    'sbg:x': 513.3573608398438
    'sbg:y': 633
  - id: germline_sv_vcf
    outputSource:
      - pcawg_icgc_delly_workflow_1/germline_sv_vcf
    'sbg:fileTypes': VCF.GZ
    type: File
    'sbg:x': 513.3573608398438
    'sbg:y': 526
  - id: somatic_bedpe
    outputSource:
      - pcawg_icgc_delly_workflow_1/somatic_bedpe
    'sbg:fileTypes': TXT
    type: File
    'sbg:x': 513.3573608398438
    'sbg:y': 214
  - id: somatic_sv_vcf
    outputSource:
      - pcawg_icgc_delly_workflow_1/somatic_sv_vcf
    'sbg:fileTypes': VCF.GZ
    type: File
    'sbg:x': 513.3573608398438
    'sbg:y': 107
  - id: sv_qc
    outputSource:
      - pcawg_icgc_delly_workflow_1/sv_qc
    type: File
    'sbg:x': 513.3573608398438
    'sbg:y': 0
  - id: germline_indel_vcf_gz
    outputSource:
      - icgc_pcawg_dkfz_workflow/germline_indel_vcf_gz
    'sbg:fileTypes': VCF.GZ
    type: File
    'sbg:x': 923.5116577148438
    'sbg:y': 798
  - id: germline_snv_mnv_vcf_gz
    outputSource:
      - icgc_pcawg_dkfz_workflow/germline_snv_mnv_vcf_gz
    'sbg:fileTypes': VCF.GZ
    type: File
    'sbg:x': 923.5116577148438
    'sbg:y': 691
  - id: somatic_cnv_tar_gz
    outputSource:
      - icgc_pcawg_dkfz_workflow/somatic_cnv_tar_gz
    'sbg:fileTypes': TAR.GZ
    type: File
    'sbg:x': 923.5116577148438
    'sbg:y': 584
  - id: somatic_cnv_vcf_gz
    outputSource:
      - icgc_pcawg_dkfz_workflow/somatic_cnv_vcf_gz
    'sbg:fileTypes': VCF.GZ
    type: File
    'sbg:x': 923.5116577148438
    'sbg:y': 477.0000305175781
  - id: somatic_indel_tar_gz
    outputSource:
      - icgc_pcawg_dkfz_workflow/somatic_indel_tar_gz
    'sbg:fileTypes': TAR.GZ
    type: File
    'sbg:x': 923.5116577148438
    'sbg:y': 370.0000305175781
  - id: somatic_indel_vcf_gz
    outputSource:
      - icgc_pcawg_dkfz_workflow/somatic_indel_vcf_gz
    'sbg:fileTypes': VCF.GZ
    type: File
    'sbg:x': 923.5116577148438
    'sbg:y': 263.0000305175781
  - id: somatic_snv_mnv_tar_gz
    outputSource:
      - icgc_pcawg_dkfz_workflow/somatic_snv_mnv_tar_gz
    'sbg:fileTypes': TAR.GZ
    type: File
    'sbg:x': 923.5116577148438
    'sbg:y': 156.00003051757812
  - id: somatic_snv_mnv_vcf_gz
    outputSource:
      - icgc_pcawg_dkfz_workflow/somatic_snv_mnv_vcf_gz
    'sbg:fileTypes': VCF.GZ
    type: File
    'sbg:x': 923.5116577148438
    'sbg:y': 49.000030517578125
steps:
  - id: pcawg_icgc_delly_workflow_1
    in:
      - id: bam_inputs
        source:
          - bam_inputs
      - id: reference-gc
        source: reference-gc
      - id: reference-gz
        source: reference-gz
      - id: run_id
        source: run_id
    out:
      - id: cov
      - id: cov_plots
      - id: germline_bedpe
      - id: germline_sv_vcf
      - id: somatic_bedpe
      - id: somatic_sv_vcf
      - id: sv_log
      - id: sv_qc
    run: delly/icgc_pcawg_seqware_delly_sbg.cwl
    label: ICGC PCAWG Seqware Delly Workflow
    'sbg:x': 155.296875
    'sbg:y': 477.0000305175781
  - id: icgc_pcawg_dkfz_workflow
    in:
      - id: delly-bedpe
        source: pcawg_icgc_delly_workflow_1/somatic_bedpe
      - id: bam_inputs
        source:
          - bam_inputs
      - id: reference-gz
        source: reference-dkfz
      - id: run_id
        source: run_id
    out:
      - id: germline_indel_vcf_gz
      - id: germline_snv_mnv_vcf_gz
      - id: somatic_cnv_tar_gz
      - id: somatic_cnv_vcf_gz
      - id: somatic_indel_tar_gz
      - id: somatic_indel_vcf_gz
      - id: somatic_snv_mnv_tar_gz
      - id: somatic_snv_mnv_vcf_gz
    run: dkfz/icgc_pcawg_dkfz_sbg.cwl
    label: ICGC PCAWG DKFZ Workflow
    'sbg:x': 513.3573608398438
    'sbg:y': 370
requirements: []
dct:creator:
  foaf:name: SevenBridgesGenomics
  foaf:mbox: "mailto:support@sbgenomics.com"
'sbg:categories':
  - Variant Calling
  - CWL1.0

